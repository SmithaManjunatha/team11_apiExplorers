{
	"info": {
		"_postman_id": "168949ac-e8ec-4df4-9cfd-60a78e29235c",
		"name": "Team11_APIExplorers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33413576",
		"_collection_link": "https://team11apiexplorersjul24.postman.co/workspace/d0334863-9256-4f5f-8771-7628c87e74b7/collection/33413576-168949ac-e8ec-4df4-9cfd-60a78e29235c?action=share&source=collection_link&creator=33413576"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get response body -> \"token\" value\r",
									"bodyData = pm.response.json();\r",
									"\r",
									"console.log(\"Response \" + bodyData);\r",
									"token_value = bodyData.token;\r",
									"\r",
									"//To check in the console\r",
									"console.log(\"Admin Generated Token: \" + token_value);\r",
									"\r",
									"//Setting token as global variable to use in collections\r",
									"pm.collectionVariables.set(\"adminToken\", token_value);\r",
									"\r",
									"//data validation\r",
									"pm.test('Verified user signed in ', () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.token).to.eql(pm.collectionVariables.get('adminToken'));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Schema validation\r",
									"\r",
									"const schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"token\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"loginUserEmail\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"roles\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"token\",\r",
									"    \"type\",\r",
									"    \"userId\",\r",
									"    \"loginUserEmail\",\r",
									"    \"roles\",\r",
									"    ]\r",
									"};\r",
									"\r",
									"pm.test(\"Response contains valid JSON data\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{password}}\",\r\n  \"userLoginEmail\": \"{{userLoginEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dietician",
			"item": [
				{
					"name": "Create Dietician",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"9876543210\",\r\n  \"DateOfBirth\": \"1976-07-26\",\r\n  \"Education\": \"Finance\",\r\n  \"Email\": \"allen@gmail.com\",\r\n  \"Firstname\": \"Allen\",\r\n  \"HospitalCity\": \"New York\",\r\n  \"HospitalName\": \"David\",\r\n  \"HospitalPincode\": \"765432\",\r\n  \"HospitalStreet\": \"567,Daisy lane\",\r\n  \"Lastname\": \"Steward\"\r\n}\r\n\r\n\r\n\t",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/dietician",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"dietician"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dietician Token Generation",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"password\": \"Purple76\",\r\n        \"userLoginEmail\": \"allen@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patient",
			"item": [
				{
					"name": "Create Patient",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{dieticain_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "sample pdf file",
									"type": "file",
									"src": "6wGhos2ZQ/HyperThyroid_Report_final.pdf"
								},
								{
									"key": "patientInfo",
									"value": "{ \"FirstName\": \"boaz\",\n\"LastName\": \"erd\",\n\"ContactNumber\": \"6789504321\",\n\"Email\": \"boaz@gmail.com\",\n\"Allergy\": \"milk\",\n\"FoodPreference\": \"VEGAN\",\n\"CuisineCategory\":\"indian\",\n\"DateOfBirth\": \"1980-02-14\"\n}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseurl}}/patient",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Patient Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{dieticain_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "sample pdf file",
									"type": "file",
									"src": "95-1y2bSp/HyperThyroid_Report_final.pdf"
								},
								{
									"key": "patientInfo",
									"value": "{ \"FirstName\": \"boaz\",\n\"LastName\": \"erd\",\n\"ContactNumber\": \"6789504321\",\n\"Email\": \"boaz@gmail.com\",\n\"Allergy\": \"milk\",\n\"FoodPreference\": \"VEGAN\",\n\"CuisineCategory\":\"indian\",\n\"DateOfBirth\": \"1980-02-14\"\n}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseurl}}/patient",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"patient"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Morbidity",
			"item": [
				{
					"name": "Get all Morbidities",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/morbidity",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"morbidity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get morbidityName",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/morbidity/{{morbidityName}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"morbidity",
								"{{morbidityName}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"console.log(\"In Collection Pre-request\");\r",
					"console.log(\"In Collection \" + pm.collectionVariables.get(\"adminToken\"));\r",
					"//  let username = data[\"Create User\"]['userName'];\r",
					"//  let password = data[\"Create User\"]['psw'];\r",
					"if(pm.collectionVariables.get(\"adminToken\")==\"\"|| pm.collectionVariables.get(\"adminToken\" )== null){\r",
					"    {\r",
					"        console.log(\"Calling Generated Admin Token\");\r",
					"        const getTokenReq = {\r",
					"            url: pm.environment.get(\"baseurl\") + '/login',\r",
					"            method: 'POST',\r",
					"            header: {'Content-Type': 'application/json'},\r",
					"            body: {\r",
					"                mode:'raw',\r",
					"                raw: JSON.stringify({\r",
					"                    \"userLoginEmail\": \"Team11@gmail.com\", \r",
					"                    \"password\": \"test\" \r",
					"                    \r",
					"                })\r",
					"            }\r",
					"        };\r",
					"        console.log( getTokenReq.url);\r",
					"    pm.sendRequest(getTokenReq,function(err, response){\r",
					"        if(err){\r",
					"            console.log(err)\r",
					"        }else{\r",
					"            console.log(\"Collection Response Token: \" + response.json().token)\r",
					"            pm.collectionVariables.set(\"adminToken\",response.json().token);\r",
					"        }\r",
					"    });\r",
					"    }\r",
					"\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "adminToken",
			"value": ""
		}
	]
}